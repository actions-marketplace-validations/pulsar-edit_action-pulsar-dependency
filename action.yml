name: 'Action Pulsar Dependency Tester'
description: 'Test changes in Core Dependencies of Pulsar'
author: confused-Techie
branding:
  icon: check-square
  color: purple
runs:
  using: "composite"
  steps:
    - if: runner.os == 'Linux'
      shell: bash
      run: |
        sudo apt install -y libnotify4
        curl -L "https://download.pulsar-edit.dev/?os=linux&type=linux_deb" --output pulsar.deb
        sudo dpkg -i pulsar.deb
    - if: runner.os == 'macOS'
      shell: bash
      run: |
        curl -L "https://download.pulsar-edit.dev/?os=intel_mac&type=mac_dmg" --output pulsar.dmg
        hdiutil attach pulsar.dmg
        sudo cp -rf /Volumes/Pulsar*/Pulsar.app /Applications
        xattr -cr /Applications/Pulsar.app/
        sudo ln -s /Applications/Pulsar.app/Contents/MacOS/Pulsar /usr/local/bin/pulsar
    - if: runner.os == 'Windows'
      shell: pwsh
      run: |
        $wc = New-Object System.Net.WebClient
        $url = "https://download.pulsar-edit.dev/?os=windows&type=windows_setup"
        $downloadPath = "pulsarInstall.exe"

        Write-Host "Downloading Pulsar to $downloadPath"
        $wc.DownloadFile($url, $downloadPath)

        Write-Host "Installing Pulsar - this may take awhile"
        Start-Process -FilePath $downloadPath -ArgumentList '/currentuser', '/S' -Wait
        Write-Host "Pulsar Install completed"

        Write-Host "Adding Pulsar and PPM directories to User PATH"

        $existingPathData = [System.Environment]::GetEnvironmentVariable("Path","User")
        $newPathData = @(
          $existingPathData,
          "$env:LOCALAPPDATA\Programs\Pulsar\",
          "$env:LOCALAPPDATA\Programs\Pulsar\resources\app\ppm\bin\"
        )
        
        [System.Environment]::SetEnvironmentVariable("Path", (($newPathData -join ';').replace(';;', ';')), [EnvironmentVariableTarget]::User )
        $env:Path = (@(
          [System.Environment]::GetEnvironmentVariable("Path","Machine"),
          [System.Environment]::GetEnvironmentVariable("Path","User")
        ) -join ';')
        Write-Host "PATH updated: `r`nPreviously `r`n$($existingPathData)`r`nNow `r`n$([System.Environment]::GetEnvironmentVariable("Path","User"))"
